# Config for {{host.name}}

server {
        listen 80;
        listen [::]:80 ;
        {%if host.root -%}
        root {{host.root}};
        {% endif -%}
        server_name {{host.domain}};
        
        {% if host.raw%}
        {{host.raw |indent(8) }}
        {%endif -%}
        {% if 'well-known' in host.use %}
        location ^~ /.well-known/ {
                        alias /var/www/well-known/;
                        autoindex on;
                        try_files $uri $uri/  =404;
        }
        {%endif%}
        {% if 'redirect_https' in host.use -%}
        return 301 https://$host$request_uri;
        {%endif -%}
}

{% if 'https' in host.use %}
server {
        listen [::]:443 ssl http2; 
        listen 443 ssl http2; 
        ssl_certificate /etc/letsencrypt/live/{{host.cert}}/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/{{host.cert}}/privkey.pem; 
        include /etc/letsencrypt/options-ssl-nginx.conf; 
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 
        
        {% if 'hsts' in host.use -%}
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        {% endif -%}
	{% if 'legacy_warn' in host.use%}
                # Legacy banner
                include /etc/nginx/snippets/legacy-banner.conf;
                include /etc/nginx/snippets/legacy-js.conf;
                {%endif%}
	
	
        server_name {{host.domain}};
        {%if host.root -%}
        root {{host.root}};
        {% endif -%}
        {% if not host.raw -%}
        {% for errorpage in host.custom_error  -%}
        error_page {{errorpage.code}} /{{errorpage.file}};
        location = /{{errorpage.file}} {
                root {{errorpage.root}};
                internal;
        }
        {% endfor -%}
        {% if 'is_www' in host.use %}
        {% if 'well-known' in host.use %}
        location ^~ /.well-known/ {
                        alias /var/www/well-known/;
                        autoindex on;
                        try_files $uri $uri/  =404;
        }
        {%endif%}
        location / {
                try_files $uri $uri/ =404;
                {% if 'legacy_warn' in host.use%}
                # Legacy banner
                include /etc/nginx/snippets/legacy-banner.conf;
		
                if ($ipv4 ~ "^$") {
                        set $legacy "</body>"; # Do not modify, IPv6 is used
                }
                sub_filter "script-src" "script-src 'unsafe-inline'";
                sub_filter "</body>" $legacy;
                {%endif%}
        }
        
        {% if host.backend %}
        
        {% if host.backend.type== 'php' %}
        location ~* \.php$ {
                fastcgi_pass {{host.backend.name}};
                include         fastcgi_params;
                fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
                fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
        }        {%endif%} 
        {%endif%} {# Backend #}
        {%else%}
        return 301 https://www.{{host.domain}}$request_uri;
        {%endif%}

        {%endif%} {# ! Raw part #}
        {% if host.raw%}
        {{host.raw |indent(8) }}
        {%endif -%}
        
}{%endif%}
